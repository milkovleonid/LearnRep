<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>To-Do List</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            max-width: 600px;
            margin: 0 auto;
            padding: 20px;
            background-color: #f5f5f5;
        }
        h1 {
            text-align: center;
            color: #333;
        }
        #task-form {
            display: flex;
            margin-bottom: 20px;
        }
        #task-input {
            flex: 1;
            padding: 10px;
            font-size: 16px;
            border: 1px solid #ddd;
            border-radius: 4px;
        }
        #task-form button {
            padding: 10px 20px;
            background-color: #28a745;
            color: white;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            margin-left: 10px;
        }
        #task-list {
            list-style: none;
            padding: 0;
        }
        .task-item {
            display: flex;
            align-items: center;
            padding: 10px;
            background-color: white;
            border: 1px solid #ddd;
            border-radius: 4px;
            margin-bottom: 10px;
        }
        .task-item.done {
            opacity: 0.6;
            text-decoration: line-through;
        }
        .task-item input[type="checkbox"] {
            margin-right: 10px;
        }
        .task-item button {
            margin-left: auto;
            background-color: #dc3545;
            color: white;
            border: none;
            border-radius: 4px;
            padding: 5px 10px;
            cursor: pointer;
        }
    </style>
</head>
<body>
    <h1>To-Do List</h1>
    
    <!-- Форма добавления задачи -->
    <form id="task-form">
        <input 
            type="text" 
            id="task-input" 
            placeholder="Введите задачу..." 
            required
        >
        <button type="submit">Добавить</button>
    </form>
    
    <!-- Список задач -->
    <ul id="task-list">
        <!-- Задачи будут добавляться здесь через JavaScript -->
    </ul>
    <script>
    document.addEventListener('DOMContentLoaded', () => {
    const taskForm = document.getElementById('task-form');
    const taskInput = document.getElementById('task-input');
    const taskList = document.getElementById('task-list');
    
    // Базовый URL API
    const API_URL = 'http://127.0.0.1:5000/tasks';

    // Загрузка задач с сервера
    async function loadTasks() {
        try {
            const response = await fetch(API_URL);
            if (!response.ok) throw new Error('Ошибка загрузки задач');
            const tasks = await response.json();
            renderTasks(tasks);
        } catch (error) {
            console.error('Ошибка:', error);
        }
    }

    // Отображение задач
    function renderTasks(tasks) {
        taskList.innerHTML = '';
        tasks.forEach(task => {
            const li = document.createElement('li');
            li.className = `task-item ${task.done ? 'done' : ''}`;
            li.innerHTML = `
                <input 
                    type="checkbox" 
                    ${task.done ? 'checked' : ''} 
                    onchange="toggleTask(${task.id})"
                >
                <span>${task.title}</span>
                <button onclick="deleteTask(${task.id})">Удалить</button>
            `;
            taskList.appendChild(li);
        });
    }

    // Добавление задачи
    taskForm.addEventListener('submit', async (e) => {
        e.preventDefault();
        const title = taskInput.value.trim();
        if (!title) return;

        try {
            const response = await fetch(API_URL, {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ title })
            });
            
            if (!response.ok) throw new Error('Ошибка добавления задачи');
            
            taskInput.value = '';
            loadTasks(); // Перезагружаем список после добавления
        } catch (error) {
            console.error('Ошибка:', error);
        }
    });

    // Переключение статуса задачи
    window.toggleTask = async (id) => {
        try {
            const task = await getTaskById(id);
            const response = await fetch(`${API_URL}/${id}`, {
                method: 'PUT',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ done: !task.done })
            });
            
            if (!response.ok) throw new Error('Ошибка обновления задачи');
            loadTasks(); // Обновляем список после изменения
        } catch (error) {
            console.error('Ошибка:', error);
        }
    };

    // Удаление задачи
    window.deleteTask = async (id) => {
        try {
            const response = await fetch(`${API_URL}/${id}`, {
                method: 'DELETE'
            });
            
            if (!response.ok) throw new Error('Ошибка удаления задачи');
            loadTasks(); // Обновляем список после удаления
        } catch (error) {
            console.error('Ошибка:', error);
        }
    };

    // Вспомогательная функция: получение задачи по ID
    async function getTaskById(id) {
        const response = await fetch(`${API_URL}/${id}`);
        if (!response.ok) throw new Error('Задача не найдена');
        return await response.json();
    }

    // Инициализация
    loadTasks();
    });
    </script>
</body>
</html>